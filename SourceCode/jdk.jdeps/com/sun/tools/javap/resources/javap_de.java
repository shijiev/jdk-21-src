package com.sun.tools.javap.resources;

public final class javap_de extends java.util.ListResourceBundle {
    protected final Object[][] getContents() {
        return new Object[][] {
            { "err.bad.constant.pool", "Fehler beim Lesen von Konstantenpool f\u00FCr {0}: {1}" },
            { "err.bad.innerclasses.attribute", "ung\u00FCltiges InnerClasses-Attribut f\u00FCr {0}" },
            { "err.cant.find.module", "Modul {0} nicht gefunden" },
            { "err.cant.find.module.ex", "Problem beim Auffinden von Modul {0}: {1}" },
            { "err.class.not.found", "Klasse nicht gefunden: {0}" },
            { "err.crash", "Ein schwerwiegender interner Fehler ist aufgetreten: {0}\nMelden Sie einen Bug mit den folgenden Informationen:\n{1}" },
            { "err.end.of.file", "unerwartetes Dateiende beim Lesen von {0}" },
            { "err.fatal.err", "Schwerwiegender Fehler: {0}" },
            { "err.file.not.found", "Datei nicht gefunden: {0}" },
            { "err.incompatible.options", "ung\u00FCltige Optionenkombination: {0}" },
            { "err.internal.error", "interner Fehler: {0} {1} {2}" },
            { "err.invalid.arg.for.option", "ung\u00FCltiges Argument f\u00FCr Option: {0}" },
            { "err.invalid.use.of.option", "ung\u00FCltige Verwendung von Option: {0}" },
            { "err.ioerror", "I/O-Fehler beim Lesen von {0}: {1}" },
            { "err.missing.arg", "kein Wert angegeben f\u00FCr {0}" },
            { "err.no.SourceFile.attribute", "kein SourceFile-Attribut" },
            { "err.no.classes.specified", "keine Klassen angegeben" },
            { "err.nomem", "Nicht gen\u00FCgend Speicher. Verwenden Sie die Option -J-Xmx zum Erweitern des Speichers." },
            { "err.not.standard.file.manager", "Klassendateien k\u00F6nnen nur angegeben werden, wenn ein Standarddateimanager verwendet wird" },
            { "err.only.for.launcher", "Diese Option kann nur verwendet werden, wenn javap \u00FCber den Befehlszeilen-Launcher aufgerufen wird." },
            { "err.prefix", "Fehler:" },
            { "err.source.file.not.found", "Quelldatei nicht gefunden" },
            { "err.unknown.option", "unbekannte Option: {0}" },
            { "javap.description", "Mindestens eine Klassendatei disassemblieren" },
            { "main.opt.J", "  -J<vm-option>                    Gibt eine VM-Option an" },
            { "main.opt.bootclasspath", "  -bootclasspath <Pfad>            Setzt den Speicherort von Bootstrap-Klassendateien au\u00DFer Kraft" },
            { "main.opt.c", "  -c                               Disassembliert den Code" },
            { "main.opt.class_path", "  --class-path <Pfad>              Gibt an, wo sich Benutzerklassendateien befinden" },
            { "main.opt.classpath", "  -classpath <Pfad>                Gibt an, wo sich Benutzerklassendateien befinden" },
            { "main.opt.constants", "  -constants                       Zeigt die endg\u00FCltigen Konstanten" },
            { "main.opt.cp", "  -cp <Pfad>                       Gibt an, wo sich Benutzerklassendateien befinden" },
            { "main.opt.help", "  --help -help -h -?               Gibt diese Hilfemeldung aus" },
            { "main.opt.l", "  -l                               Gibt die Zeilennummer und lokale Variablentabellen aus" },
            { "main.opt.module", "  --module <Modul>  -m <Modul>   Gibt das Modul an, das die zu disassemblierenden Klassen enth\u00E4lt" },
            { "main.opt.module_path", "  --module-path <Pfad>             Gibt an, wo sich die Anwendungsmodule befinden" },
            { "main.opt.multi_release", "  --multi-release <version>        Gibt die Version an, die in Multi-Release-JAR-Dateien verwendet werden soll" },
            { "main.opt.p", "  -p  -private                     Zeigt alle Klassen und Mitglieder" },
            { "main.opt.package", "  -package                         Zeigt Package/gesch\u00FCtzte/\u00F6ffentliche Klassen\n                                   und Mitglieder (Standard)" },
            { "main.opt.protected", "  -protected                       Zeigt gesch\u00FCtzte/\u00F6ffentliche Klassen und Mitglieder" },
            { "main.opt.public", "  -public                          Zeigt nur \u00F6ffentliche Klassen und Mitglieder" },
            { "main.opt.s", "  -s                               Gibt Signaturen vom Typ \"intern\" aus" },
            { "main.opt.sysinfo", "  -sysinfo                         Zeigt die Systeminformationen (Pfad, Gr\u00F6\u00DFe, Datum, SHA-256-Hash)\n                                   der Klasse, die verarbeitet wird" },
            { "main.opt.system", "  --system <JDK>                   Gibt an, wo sich die Systemmodule befinden" },
            { "main.opt.upgrade_module_path", "  --upgrade-module-path <Pfad>     Gibt an, wo sich die upgradef\u00E4higen Module befinden" },
            { "main.opt.v", "  -v  -verbose                     Gibt zus\u00E4tzliche Informationen aus" },
            { "main.opt.version", "  -version                         Versionsinformationen" },
            { "main.usage", "Verwendung: {0} <Optionen> <Klassen>\nwobei folgende Optionen m\u00F6glich sind:" },
            { "main.usage.foot", "\nF\u00FCr Optionen im GNU-Stil kann \"=\" statt Leerzeichen verwendet werden, um den Namen einer Option\nvon ihrem Wert zu trennen.\n\nJede zu zeigende Klasse kann durch einen Dateinamen, eine URL oder durch ihren vollst\u00E4ndig\nqualifizierten Klassennamen angegeben werden. Beispiele:\n   path/to/MyClass.class\n   jar:file:///path/to/MyJar.jar!/mypkg/MyClass.class\n   java.lang.Object\n" },
            { "main.usage.summary", "Verwendung: {0} <Optionen> <Klassen>\nMit --help k\u00F6nnen Sie eine Liste der m\u00F6glichen Optionen aufrufen" },
            { "note.prefix", "Hinweis:" },
            { "warn.prefix", "Warnung:" },
            { "warn.unexpected.class", "Datei {0} enth\u00E4lt nicht die Klasse {1}" },
        };
    }
}
